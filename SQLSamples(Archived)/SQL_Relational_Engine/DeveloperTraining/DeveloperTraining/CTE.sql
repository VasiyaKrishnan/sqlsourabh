USE AdventureWorks;
GO

WITH Sales_CTE (SalesPersonID, NumberOfOrders, MaxDate)
AS
(
    SELECT SalesPersonID, COUNT(*), MAX(OrderDate)
    FROM Sales.SalesOrderHeader
    GROUP BY SalesPersonID
)
SELECT E.EmployeeID, OS.NumberOfOrders, OS.MaxDate,
    E.ManagerID, OM.NumberOfOrders, OM.MaxDate
FROM HumanResources.Employee AS E
    JOIN Sales_CTE AS OS
    ON E.EmployeeID = OS.SalesPersonID
    LEFT OUTER JOIN Sales_CTE AS OM
    ON E.ManagerID = OM.SalesPersonID




--- Recursive CTE's


USE AdventureWorks;
GO
WITH DirectReports (ManagerID, EmployeeID, Title, DeptID, Level)
AS
(
-- Anchor member definition
    SELECT e.ManagerID, e.EmployeeID, e.Title, edh.DepartmentID, 
        0 AS Level
    FROM HumanResources.Employee AS e
    INNER JOIN HumanResources.EmployeeDepartmentHistory AS edh
        ON e.EmployeeID = edh.EmployeeID AND edh.EndDate IS NULL
    WHERE ManagerID IS NULL
    UNION ALL
-- Recursive member definition
    SELECT e.ManagerID, e.EmployeeID, e.Title, edh.DepartmentID,
        Level + 1
    FROM HumanResources.Employee AS e
    INNER JOIN HumanResources.EmployeeDepartmentHistory AS edh
        ON e.EmployeeID = edh.EmployeeID AND edh.EndDate IS NULL
    INNER JOIN DirectReports AS d
        ON e.ManagerID = d.EmployeeID 
)
-- Statement that executes the CTE
SELECT ManagerID, EmployeeID, Title, Level
FROM DirectReports
INNER JOIN HumanResources.Department AS dp
    ON DirectReports.DeptID = dp.DepartmentID
WHERE dp.GroupName = N'Research and Development' OR Level = 0;
GO

--Example Code Walkthrough
--The recursive CTE, DirectReports, defines one anchor member and one recursive member.
--The anchor member returns the base result set T0. This is the highest ranking employee in the company; that is, an employee who does not report to a manager. 
--Here is the result set returned by the anchor member: 
-- Copy Code 
--ManagerID EmployeeID Title                                   Level
--The recursive member returns the direct subordinate(s) of the employee in the anchor member result set. This is achieved by a join operation between the Employee table and the DirectReports CTE. It is this reference to the CTE itself that establishes the recursive invocation. Based on the employee in the CTE DirectReports as input (Ti), the join (Employee.ManagerID = DirectReports.EmployeeID) returns as output (Ti+1), the employees who have (Ti) as their manager. Therefore, the first iteration of the recursive member returns this result set: 
--The recursive member is activated repeatedly. The second iteration of the recursive member uses the single-row result set in step 3 (containing EmployeeID 12) as the input value, and returns this result set: 

-- Copy Code 
--ManagerID EmployeeID Title                                   Level
----------- ---------- --------------------------------------- ------
--12        3          Engineering Manager                     2
 
--The third iteration of the recursive member uses the single-row result set above (containing EmployeeID 3) as the input value, and returns this result set: 

-- Copy Code 
--ManagerID EmployeeID Title                                   Level
----------- ---------- --------------------------------------- ------
--3         4          Senior Tool Designer                    3
--3         9          Design Engineer                         3
--3         11         Design Engineer                         3
--3         158        Research and Development Manager        3
--3         263        Senior Tool Designer                    3
--3         267        Senior Design Engineer                  3
--3         270        Design Engineer                         3
 
--The fourth iteration of the recursive member uses the previous set of rows for EmployeeID values 4, 9, 11, 158, 263, 267, and 270 as the input value. 

--This process repeats until the recursive member returns an empty result set.


--The final result set returned by the running query is the union of all result sets generated by the anchor and recursive members. 

--Here is the complete result set returned by the example:

-- Copy Code 
--ManagerID EmployeeID Title                                   Level
----------- ---------- --------------------------------------- ------
--NULL      109        Chief Executive Officer                 0
--109       12         Vice President of Engineering           1
--12        3          Engineering Manager                     2
--3         4          Senior Tool Designer                    3
--3         9          Design Engineer                         3
--3         11         Design Engineer                         3
--3         158        Research and Development Manager        3
--3         263        Senior Tool Designer                    3
--3         267        Senior Design Engineer                  3
--3         270        Design Engineer                         3
--263       5          Tool Designer                           4
--263       265        Tool Designer                           4
--158       79         Research and Development Engineer       4
--158       114        Research and Development Engineer       4
--158       217        Research and Development Manager        4
--(15 row(s) affected)
 
